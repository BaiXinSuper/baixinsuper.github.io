<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>白欣</title><subtitle>欢迎来到白欣的博客~~~~~~</subtitle> <updated>2022-04-13T01:55:17+00:00</updated> <author> <name>BaiXinSuper</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 BaiXinSuper </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Boxes Api Useages EN</title><link href="/posts/BoxesApiEn/" rel="alternate" type="text/html" title="Boxes Api Useages EN" /><published>2022-04-10T02:30:00+00:00</published> <updated>2022-04-13T01:54:13+00:00</updated> <id>/posts/BoxesApiEn/</id> <content src="/posts/BoxesApiEn/" /> <author> <name>欣欣</name> </author> <category term="Api" /> <summary> Useage code it at your code head require("Boxes") FuntionName.Func() to use it Boxes Funtion Ped/Int/Entity myPed() Veh/Int/Entity myVeh() V3 myPos() float myHeal() float MaxHeal(Ped who) void HalfGod(String name,Int Parentid) string getIp(Int pid) array&amp;lt;int&amp;gt; whoIsSpectMe() array&amp;lt;int&amp;gt; whoIsAimMe() array&amp;lt;int&amp;... </summary> </entry> <entry><title>Boxes Api用法</title><link href="/posts/BoxesApiCn/" rel="alternate" type="text/html" title="Boxes Api用法" /><published>2022-04-10T02:30:00+00:00</published> <updated>2022-04-13T01:54:13+00:00</updated> <id>/posts/BoxesApiCn/</id> <content src="/posts/BoxesApiCn/" /> <author> <name>欣欣</name> </author> <category term="Api" /> <summary> 用法 把这行代码写入你的lua文件头部 require("Boxes") 使用-&amp;gt;方法名.方法() 调用 Boxes 方法 Ped/Int/Entity myPed() Veh/Int/Entity myVeh() V3 myPos() float myHeal() float MaxHeal(Ped who) void HalfGod(String name,Int Parentid) string getIp(Int pid) array&amp;lt;int&amp;gt; whoIsSpectMe() array&amp;lt;int&amp;gt; whoIsAimMe() array&amp;lt;int&amp;gt; tokenSort() Entity ... </summary> </entry> <entry><title>第一个2Take1 Lua</title><link href="/posts/class6/" rel="alternate" type="text/html" title="第一个2Take1 Lua" /><published>2022-04-08T11:03:00+00:00</published> <updated>2022-04-10T03:59:39+00:00</updated> <id>/posts/class6/</id> <content src="/posts/class6/" /> <author> <name>欣欣</name> </author> <category term="如何写好一个2Take1 Lua" /> <summary> 前言 第一讲 - 搭建Lua环境 第二讲 - 初步认识Lua 第三讲 - Lua的基本语法 第四讲 - 2Take1 Lua基本语法 1 第五讲 - 2Take1 Lua基本语法 2 一、建立父选项 menu.add_feature("class","parent",0) 这一行我们之前有剖析讲过，这里不细说 二、引入前置库 1.下载库 Github 2.引入库 将下载好的lua放入脚本文件夹，然后在你的lua头上写以下代码 require("Boxes") 3.调用功能 二次封装完的Api文档 剖析文档 前面一列是指返回的类型，后面一行是你可以调用的方法以及参数 调用方法 我们在你lua的后面可以调用功能 例子 Boxes.HalfGod('半无敌',id) 完整代码 require("Boxes") local main=menu.add_fe... </summary> </entry> <entry><title>2Take1 Lua基本语法 2</title><link href="/posts/class5/" rel="alternate" type="text/html" title="2Take1 Lua基本语法 2" /><published>2022-04-08T11:03:00+00:00</published> <updated>2022-04-10T03:59:39+00:00</updated> <id>/posts/class5/</id> <content src="/posts/class5/" /> <author> <name>欣欣</name> </author> <category term="如何写好一个2Take1 Lua" /> <summary> 前言 第一讲 - 搭建Lua环境 第二讲 - 初步认识Lua 第三讲 - Lua的基本语法 第四讲 - 2Take1 Lua基本语法 1 一、Player Function 玩家函数 在开始之前我们需要了解几个英文单词 pedestrian(ped) 行人 aim 瞄准 visible 可见 social club ID(scid) 社交俱乐部id vehicle 载具/车辆 host 主持人(主机) from 从 god 神(无敌) coords 坐标 好我们接着来看官方给的api 翻译一下，获取玩家实体 玩家是否在自由瞄准 玩家是否在任意载具内 从实体获取玩家id Q:玩家ID是什么 A:2T里面在线玩家列表里面包含了一个id，代表了玩家在战局当中的插槽位置 Q:我们获取了这个实体有什么用吗？ A: Ped Function 这是个行人专用方法，... </summary> </entry> <entry><title>2Take1 Lua基本语法 1</title><link href="/posts/class4/" rel="alternate" type="text/html" title="2Take1 Lua基本语法 1" /><published>2022-04-07T02:34:00+00:00</published> <updated>2022-04-08T11:39:45+00:00</updated> <id>/posts/class4/</id> <content src="/posts/class4/" /> <author> <name>欣欣</name> </author> <category term="如何写好一个2Take1 Lua" /> <summary> 前言 第一讲 - 搭建Lua环境 第二讲 - 初步认识Lua 第三讲 - Lua的基本语法 一、API API介绍 如果你看不懂，那么说简单点API就是别人封装好的功能你可以直接使用，写2T也差不多是这样 调用API 1.API文档 如果你看不懂请使用Chrome/edge自带的翻译进行翻译，代码部分不会被翻译，若英语不好则需要翻译软件帮助 2.理解API 如何理解这一个个的API呢？ 首先，我们观察一下大标题 这个Menu可以理解为简单的函数或者说是一个数组，假如为面向对象，那这个Menu就是“类”的概念 如何接下来看如何建立一个独立的选项 menu.add_feature('test','parent',0,function()end) 我们剖析一下来看 我们可以把这个看做 类/函数/数组 menu. 而这个点(.)我们可以理解为调用 我们简单来理解他，有个百... </summary> </entry> </feed>
