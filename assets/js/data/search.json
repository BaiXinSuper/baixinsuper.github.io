[ { "title": "Boxes Api Useages EN", "url": "/posts/BoxesApiEn/", "categories": "Api", "tags": "Lua", "date": "2022-04-10 02:30:00 +0000", "snippet": "Useagecode it at your code headrequire(&quot;Boxes&quot;)FuntionName.Func() to use itBoxes FuntionPed/Int/Entity myPed()Veh/Int/Entity myVeh()V3 myPos()float myHeal()float MaxHeal(Ped who)void HalfGod(String name,Int Parentid)string getIp(Int pid)array&amp;lt;int&amp;gt; whoIsSpectMe()array&amp;lt;int&amp;gt; whoIsAimMe()array&amp;lt;int&amp;gt; tokenSort()Entity spawn(Hash hash,int/V3 pid/pos/ped/Entity)examplerequire(&quot;Boxes&quot;)local my_ped=Boxes.myPed()" }, { "title": "Boxes Api用法", "url": "/posts/BoxesApiCn/", "categories": "Api", "tags": "Lua", "date": "2022-04-10 02:30:00 +0000", "snippet": "用法把这行代码写入你的lua文件头部require(&quot;Boxes&quot;)使用-&amp;gt;方法名.方法() 调用Boxes 方法Ped/Int/Entity myPed()Veh/Int/Entity myVeh()V3 myPos()float myHeal()float MaxHeal(Ped who)void HalfGod(String name,Int Parentid)string getIp(Int pid)array&amp;lt;int&amp;gt; whoIsSpectMe()array&amp;lt;int&amp;gt; whoIsAimMe()array&amp;lt;int&amp;gt; tokenSort()Entity spawn(Hash hash,int/V3 pid/pos/ped/E)例子require(&quot;Boxes&quot;)local my_ped=Boxes.myPed()" }, { "title": "第一个2Take1 Lua", "url": "/posts/class6/", "categories": "如何写好一个2Take1 Lua", "tags": "Lua", "date": "2022-04-08 11:03:00 +0000", "snippet": "前言第一讲 - 搭建Lua环境第二讲 - 初步认识Lua第三讲 - Lua的基本语法第四讲 - 2Take1 Lua基本语法 1第五讲 - 2Take1 Lua基本语法 2一、建立父选项menu.add_feature(&quot;class&quot;,&quot;parent&quot;,0)这一行我们之前有剖析讲过，这里不细说二、引入前置库1.下载库Github2.引入库将下载好的lua放入脚本文件夹，然后在你的lua头上写以下代码require(&quot;Boxes&quot;)3.调用功能二次封装完的Api文档剖析文档前面一列是指返回的类型，后面一行是你可以调用的方法以及参数调用方法我们在你lua的后面可以调用功能例子Boxes.HalfGod(&#39;半无敌&#39;,id)完整代码require(&quot;Boxes&quot;)local main=menu.add_feature(&#39;class&#39;,&#39;parent&#39;,0)Boxes.HalfGod(&#39;半无敌&#39;,main.id)" }, { "title": "2Take1 Lua基本语法 2", "url": "/posts/class5/", "categories": "如何写好一个2Take1 Lua", "tags": "Lua", "date": "2022-04-08 11:03:00 +0000", "snippet": "前言第一讲 - 搭建Lua环境第二讲 - 初步认识Lua第三讲 - Lua的基本语法第四讲 - 2Take1 Lua基本语法 1一、Player Function玩家函数在开始之前我们需要了解几个英文单词pedestrian(ped) 行人aim 瞄准visible 可见social club ID(scid) 社交俱乐部idvehicle 载具/车辆host 主持人(主机)from 从god 神(无敌)coords 坐标好我们接着来看官方给的api翻译一下，获取玩家实体玩家是否在自由瞄准玩家是否在任意载具内从实体获取玩家idQ:玩家ID是什么A:2T里面在线玩家列表里面包含了一个id，代表了玩家在战局当中的插槽位置Q:我们获取了这个实体有什么用吗？A:Ped Function这是个行人专用方法，可以用在NPC/玩家身上Universe的半无敌 为什么他会包含在Ped Function里面呢？因为我们需要调用这个api这是Ped方法下的api，获取行人实体的最大血量里面的参数是个实体(entity)，而你记得吗，我说过ped也算做实体哦，我们这里可以填写ped 那为什么半无敌呢？设置ped血量我们可以不停地获取玩家最大血量，然后设置玩家的血量具体参考代码a=menu.add_feature(&#39;半无敌&#39;,&#39;toggle&#39;,0,function(a)local pid=player.player_id()local my_ped=player.get_player_ped(pid)while a.on do system.yield(0)--system.wait(0) 阻止线程阻塞导致游戏画面卡死，二选一即可 local max_health=ped.get_ped_max_health(my_ped) if ped.get_ped_health(my_ped)~=max_health then ped.set_ped_health(my_ped,max_health) endendend)临时编写的代码，理论上实现了半无敌的效果这样这个选项就会不断检测你的血量，当玩家血量小于最大值时就会设置玩家血量为最大值。总结写简单的2Tlua 不需要特别高的技巧，只需要你能看懂英文，你会使用翻译软件，有一点点的lua基础就可以了" }, { "title": "2Take1 Lua基本语法 1", "url": "/posts/class4/", "categories": "如何写好一个2Take1 Lua", "tags": "Lua", "date": "2022-04-07 02:34:00 +0000", "snippet": "前言第一讲 - 搭建Lua环境第二讲 - 初步认识Lua第三讲 - Lua的基本语法一、APIAPI介绍如果你看不懂，那么说简单点API就是别人封装好的功能你可以直接使用，写2T也差不多是这样调用API1.API文档如果你看不懂请使用Chrome/edge自带的翻译进行翻译，代码部分不会被翻译，若英语不好则需要翻译软件帮助2.理解API如何理解这一个个的API呢？首先，我们观察一下大标题这个Menu可以理解为简单的函数或者说是一个数组，假如为面向对象，那这个Menu就是“类”的概念如何接下来看如何建立一个独立的选项menu.add_feature(&#39;test&#39;,&#39;parent&#39;,0,function()end)我们剖析一下来看我们可以把这个看做 类/函数/数组menu.而这个点(.)我们可以理解为调用我们简单来理解他，有个百宝箱，叫menu，menu这个大宝箱里面有好多好多的零食(方法)，我们想吃这些零食呢，就要使用点(.)来拿出这个宝箱里面的零食(方法)add_feature(名字，类型，父id，运行函数)参数这个是被调用的方法，我们之前讲过传参，这里就需要我们传入4个参数1.名字名字不过多介绍，选项的名字2.类型我们创建选项的类型，我们可以在API文档中找到他这些都可以利用各大翻译软件进行翻译，这个parent类型指的是创建一个选项，你可以点进去，里面可以设置更多功能，意指父类3.父id即上面所指的父类的id，如果我们是创建在”脚本功能”这个选项里面的时候，我们的id就是 0如果你想创建在自己的选项里面的时候，我们可以把你的父选项赋值，然后用你的变量名.id代表父id例如a=menu.add_feature(&quot;1&quot;,&#39;parent&#39;,0,function()end)b=menu.add_feature(&quot;2&quot;,&#39;toggle&#39;,a.id,function()end)此时你上游戏查看，你会发现有个名为1的选项，1选项里面有个名为2的开关选项4.函数就是点击你选项的时候运行的方法menu.add_feature(&#39;1&#39;,&#39;aciton&#39;,0,function()print(&#39;你点击了选项&#39;)end)先打开控制台，然后点击名为1的选项，此时你的控制台上面会输出 “你点击了选项”其他功能差不多这个调用下期预告Player Function预计再出两个function就不再讲2T基本语法了如果你想知道某些功能使用方法，请留言，下期一并出" }, { "title": "Lua的基本语法", "url": "/posts/class3/", "categories": "如何写好一个2Take1 Lua", "tags": "Lua", "date": "2022-04-07 02:34:00 +0000", "snippet": "课程回顾第一讲 - 搭建Lua环境第二讲 - 初步认识LuaIf 如果if代码就想如果电话亭一样，当条件满足的时候会执行操作例子代码if a==1 then b=2endprint(b)输出2我们可以把if 细分为5个部分if ——-如果a==1 ——–判断的条件then ————–那么b=2 ———-满足判断的条件时候运行的代码end ———收尾elseifQ:如果我们遇到一个变量需要从多个值里面匹配怎么办？难道一个值输入一个if吗？A:当然不用啦！你这样的写法浪费运行速度的哦~Q:那怎么写呢？A:用elseifa=5if a==1 then print(1)elseif a==2 then print(2)elseif a==5 then print(5)end结果5Q:那这个跟一个一个if有什么区别吗？A:我们可以把elseif看做一个个岔路口，对应着你的编号，程序会一个一个找过去，找到你的岔路口之后就进去了，不会再往下面看了，而一个一个的if只会让你的程序进入岔路口之后再去看接下去的岔路口elseQ:如果岔路口没有我想去的怎么办A:那就用到else的概念了a=666if a==1 then print(1)else print(2)end结果2Q:为什么是2A:让你的程序找不到对应的值的时候，就会走到else里面，所有条件都不成立，那么else就接纳了程序循环这里我就讲两种十分常见的循环for 循环while 循环while 循环while 我们翻译一下 ： 同时，与……同时，在……时候好的我们通过上面的翻译可以大概了解到while循环的用法例子while 1 do print(1)end结果：111111.............................只要我不终止进程，这就会不停的循环下去Q:怎么让他循环停止下来呢？A:第一课讲过，重在思路案例代码1local a=1while a&amp;lt;10 do print(a) a=a+1end案例代码2local a=1while 1 do if a&amp;lt;10 then print(a) a=a+1 else break endend结果自行运行尝试，多打打有好处 (第三讲了，别CV哦，不然到最后你可能不会用呢)breakbreak 可在循环中跳出，停止循环for循环(迭代器)for循环需要多加练习，并不是特别容易让新手懂的案例for i=0,10,1 do print(i)end结果012345678910我们又可以分为3个部分来看待for循环i=0 —-赋值一个临时变量i 为010 —–终止值 当i到10以上的时候不在运行代码1 –每循环一次i自加的值，不填写默认为1print(i) —需要循环的代码函数函数是对语句和表达式进行抽象的主要方法。既可以用来处理一些特殊的工作，也可以用来计算一些值。我们同样可以调用函数来完成大量重复的代码，以减少代码量关键字function代码案例function abc() print(123)end结果调用Q:结果呢？？结果呢？骗我呢？A:结果为空，function只是建立函数，并没有调用呀，如果希望调用函数/方法，我们使用 函数名()调用例如function a() print(123)enda()结果123我们一样可以使用 local 建立一个局部函数例如local function a() print(123)enda()输出123返回return 返回我们可以使用return 返回一个值给调用函数的变量例子function a() return 3213123 endbb=a()print(bb)结果3213123参数Q:为什么函数名后面要跟个()呢？A:因为里面可以填写参数Q:怎么填写参数呢？function a(b,c,d) print(b,c,d)enda(1,2,3)结果1 2 3其中a(1,2,3)的操作，我们称之为传参（调用函数的时候在括号内填写的值就是参数，这个操作我们称之为传参）Q:如果少填参数会怎么样A:多动自己的手，实践出真知" }, { "title": "初步认识Lua", "url": "/posts/class2/", "categories": "如何写好一个2Take1 Lua", "tags": "Lua", "date": "2022-04-07 02:34:00 +0000", "snippet": "前言Lua 是一种轻量小巧的脚本语言，用标准C语言编写并以源代码形式开放， 其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。在本课中，如果你是个新手，请跟着教程一步一个脚印，学习Lua的基础一、第一个 “Hello World”打开你的代码编辑器输入print(&quot;Hello World&quot;)输出Hello World由此可见我们的 “print()”正如翻译：打印/输出格式print(xxx)其中xxx可以是数字，也可以用双引号 “” 单引号 ‘’ 输出字符串什么是字符串简单讲就是 双引号里面的内容例如：“Abc”“CBA”Q:如果你想在字符串里面打双引号,单引号怎么办？A: 如果你想打双引号 那么用 单引号括内容，单引号也是E:输入:print(&#39;&quot;ABC&quot;&#39;)print(&quot;&#39;CBA&#39;&quot;)输出:&quot;ABC&quot;&#39;CBA&#39;Q:如何打多行字符串A:在Lua中可以使用[[内容]]来实现多行字符串。或者在单双引号里面使用&quot;\\n&quot;换行 E:输入:x=[[321123]]b=&#39;lol\\n321&#39;print(x)print(b)输出:321123lol321变量在上一案例中利用了变量的概念，可什么是变量呢？x=123此时此刻，x代表了123这个值，而x就是变量名，这个操作，称之为 赋值变量名可以是任何英文，下划线，数字！！！！注意变量名不可以使用数字开头Q:什么意思？A:我们可以使用A123,AB1,AB2,AB3等作为变量名，而不能使用1AB,2AC,3AD等作为变量名以下关键字也不可使用| | | | || ——– | —– | —– | —— || and | break | do | else || elseif | end | false | for || function | if | in | local || nil | not | or | repeat || return | then | true | until || while | goto | | |局部变量在赋值前加上 local 代表局部变量 Q:局部变量和上面的变量有什么区别吗A:上面的变量称之为全局变量，局部变量是在一个部分里面的临时变量，不与全局变量冲突，如果你在函数内使用了同名局部变量，那么将会优先使用局部变量，BUT！！局部变量是有限制的，不推荐大面积使用基本语法注释：–在代码前面使用”–“表示注释例如：输入print(888)--print(123)输出888数据类型在每个高级语言中，基本上都有数据类型的概念Lua的数据类型常用可以分为以下种类： nil boolean number string function table nil 空类型，类似于其他语言的null如果打印一个不存在的变量就会返回nil例如 输入print(abc)输出nil Q:为什么打印nil，不是有abc吗A:因为abc是个不存在的变量，而不是字符串 boolean 中文名字：布尔型只有true 和 false两个值，也可说 真 假 注意！在lua中除了nil,false以外均是true使用以下代码证实上述输入：if false or nil then print(&quot;false 和nil至少有一个为真&quot;)else print(&quot;false 和 nil 都为假&quot;)endif 0 then print(&quot;0是真&quot;)else print(&quot;0是假&quot;)end输出：诶结果我不给你，自己实验去，实践出真知number任何不带引号的数字都看做number例如print(123123)print(1.3)print(type(123123))print(type(1.3))输出：1231231.3numbernumber也可以使用科学计数法例如：print(2e1)print(2e999)输出:201.#INFQ:为什么2e999输出 1.#INFA:1.#INF 是代表一个无效数字，至于出现这个问题是由于lua的number类型类似 int64+double 的组合体而int64最大的值是2的63次方-1，超过了这个范围就会无效function这个以后细讲，现在只需要了解他的名字 方法/函数tabletable的创建是通过”构造表达式”来完成，最简单构造表达式是{}，用来创建一个空表。也可以在表里添加一些数据--一个空tabletable1={}table2={&#39;a&#39;,&#39;b&#39;}下标又称为索引，lua里 在table中，第一个位置的下标是1，第二个是2，以此类推如果没有值，那就返回nil同时，我们可以赋值字符串，下标为任意值，注意，赋值下标为字符串那必须使用字符串才可以输出例如a={&#39;c&#39;,&#39;b&#39;,&#39;d&#39;}a[&#39;e&#39;]=&#39;f&#39;print(a[1])print(a[3])print(a[4])print(a[&#39;e&#39;])输出cdnilf" }, { "title": "搭建Lua环境", "url": "/posts/class1/", "categories": "如何写好一个2Take1 Lua", "tags": "Lua", "date": "2022-04-07 02:34:00 +0000", "snippet": "前言此系列文档仅供学习参考不出意外的话，我们会按照下列方向发展lua的基础语法2Take1 的lua基础写法lua的进阶语法2Take1 的lua进阶写法并且在将来你会跟我共同完成一个很简单的案例lua供后人参考学习！一、Lua环境搭建在线环境如果你不想在本地安装lua环境，那么就选择在线环境在线环境LinuxLinux上安装 Lua 安装非常简单，只需要下载源码包并在终端解压编译即可curl -R -O http://www.lua.org/ftp/lua-5.3.0.tar.gztar zxf lua-5.3.0.tar.gzcd lua-5.3.0make linux testmake installMac OS X与Linux同理curl -R -O http://www.lua.org/ftp/lua-5.3.0.tar.gztar zxf lua-5.3.0.tar.gzcd lua-5.3.0make macosx testmake installWindows下载地址[github]二、配置环境变量如果你是Windows你会发现你的lua没法在cmd里面直接打开如何自检是否可以正常使用Win+R键入以下内容cmd回车输入lua回车你会发现类似以下的内容Lua 5.1.5 Copyright (C) 1994-2012 Lua.org, PUC-Rio&amp;gt;&amp;gt;那证明你的环境变量已经配置完毕，无需查看此步骤如果你没有自行百度”如何编辑账户的环境变量”变量值为你的安装路径+”/bin”例如:X:/lua/5.x/bin键入到path内代码编辑器市面上的代码编辑器很多例如：VScode,Lua studio等如果你是小白推荐使用vscode，简单易懂下载地址：VScodeLua Studio别问我为啥不给N++问就是不知道以上的如何配置lua方法请自行在CSDN寻找参考地址：VScode" }, { "title": "模板文章", "url": "/posts/hello-world/", "categories": "模板", "tags": "模板", "date": "2022-03-26 02:34:00 +0000", "snippet": "" } ]
